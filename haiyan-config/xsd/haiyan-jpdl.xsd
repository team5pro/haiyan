<?xml version="1.0" encoding="UTF-8"?>
<!--W3C Schema generated by XML Spy v4.4 U (http://www.xmlspy.com)-->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified">
	<xs:element name="process-definition">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="swimlane" minOccurs="0" maxOccurs="unbounded"/>
				<xs:element ref="start-state" minOccurs="0"/>
				<xs:element ref="state" minOccurs="0" maxOccurs="unbounded"/>
				<xs:element ref="node" minOccurs="0" maxOccurs="unbounded"/>
				<xs:element ref="task-node" minOccurs="0" maxOccurs="unbounded"/>
				<xs:element ref="fork" minOccurs="0" maxOccurs="unbounded"/>
				<xs:element ref="join" minOccurs="0" maxOccurs="unbounded"/>
				<xs:element ref="decision" minOccurs="0" maxOccurs="unbounded"/>
				<xs:element ref="end-state" minOccurs="0" maxOccurs="unbounded"/>
				<xs:element ref="event" minOccurs="0" maxOccurs="unbounded"/>
			</xs:sequence>
			<xs:attribute name="name" type="xs:string" use="required"/>
		</xs:complexType>
	</xs:element>
	<xs:element name="action">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="handlerClassName" type="xs:string" minOccurs="0"/>
				<xs:element name="handlerConfig" type="xs:string" minOccurs="0"/>
				<xs:element name="handlerSettings" minOccurs="0">
					<xs:complexType>
						<xs:sequence>
							<xs:element name="entry" minOccurs="0" maxOccurs="unbounded">
								<xs:complexType>
									<xs:sequence>
										<xs:element name="key" type="xs:string"/>
										<xs:element name="value" type="xs:string"/>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
			</xs:sequence>
			<xs:attribute name="class" type="xs:string" use="required"/>
		</xs:complexType>
	</xs:element>
	<xs:element name="assignment">
		<xs:complexType>
			<xs:choice>
				<xs:element name="handlerClassName" type="xs:string" minOccurs="0"/>
				<xs:element name="expression" type="xs:string" minOccurs="0"/>
			</xs:choice>
			<xs:attribute name="class" type="xs:string" use="required"/>
		</xs:complexType>
	</xs:element>
	<xs:element name="controller">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="variable" minOccurs="0" maxOccurs="unbounded">
					<xs:complexType>
						<xs:attribute name="name" type="xs:string" use="required"/>
						<xs:attribute name="access" type="xs:string" use="required"/>
					</xs:complexType>
				</xs:element>
			</xs:sequence>
			<xs:attribute name="class" type="xs:string" use="required"/>
			<xs:attribute name="config-type" type="xs:string" use="required"/>
		</xs:complexType>
	</xs:element>
	<xs:element name="script" type="xs:string"/>
	<xs:element name="event">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="action" minOccurs="0" maxOccurs="unbounded"/>
				<xs:element ref="script" minOccurs="0" maxOccurs="unbounded"/>
			</xs:sequence>
			<xs:attribute name="type" use="required">
				<xs:simpleType>
					<xs:restriction base="xs:NMTOKEN">
						<xs:enumeration value="node-enter"/>
						<xs:enumeration value="node-leave"/>
						<xs:enumeration value="task-create"/>
						<xs:enumeration value="task-assign"/>
						<xs:enumeration value="task-start"/>
						<xs:enumeration value="process-start"/>
						<xs:enumeration value="process-end"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
		</xs:complexType>
	</xs:element>
	<xs:element name="handler">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="script"/>
			</xs:sequence>
			<xs:attribute name="class" type="xs:string" use="required"/>
		</xs:complexType>
	</xs:element>
	<xs:element name="task">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="event" minOccurs="0" maxOccurs="unbounded"/>
				<xs:element ref="assignment" minOccurs="0"/>
				<xs:element ref="controller" minOccurs="0"/>
				<!-- task-create|task-start|task-assign|task-end -->
			</xs:sequence>
			<xs:attribute name="name" type="xs:string" use="optional"/>
			<xs:attribute name="swimlane" type="xs:string" use="optional"/>
			<xs:attribute name="xmlns" type="xs:string" use="optional" default="urn:jbpm.org:jpdl-3.1"/>
		</xs:complexType>
	</xs:element>
	<xs:element name="transition">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="action" minOccurs="0" maxOccurs="unbounded"/>
				<xs:element ref="script" minOccurs="0" maxOccurs="unbounded"/>
			</xs:sequence>
			<xs:attribute name="id" type="xs:string" use="required"/>
			<xs:attribute name="name" type="xs:string" use="required"/>
			<xs:attribute name="to" type="xs:string" use="required"/>
			<xs:attribute name="ConnectionIsDefault" type="xs:boolean" use="optional"/>
		</xs:complexType>
	</xs:element>
	<xs:element name="swimlane">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="assignment" minOccurs="0"/>
			</xs:sequence>
			<xs:attribute name="name" type="xs:string" use="required"/>
			<xs:attribute name="xmlns" type="xs:string" use="optional" default="urn:jbpm.org:jpdl-3.1"/>
		</xs:complexType>
	</xs:element>
	<xs:element name="start-state">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="event" minOccurs="0" maxOccurs="unbounded"/>
				<xs:element ref="task" minOccurs="0" maxOccurs="unbounded"/>
				<xs:element ref="transition" minOccurs="0" maxOccurs="unbounded"/>
				<!-- node-leave -->
			</xs:sequence>
			<xs:attribute name="name" type="xs:string" use="required"/>
		</xs:complexType>
	</xs:element>
	<xs:element name="state">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="event" minOccurs="0" maxOccurs="unbounded"/>
				<xs:element ref="transition" minOccurs="0" maxOccurs="unbounded"/>
				<!-- node-enter|node-leave -->
			</xs:sequence>
			<xs:attribute name="name" type="xs:string" use="required"/>
			<xs:attribute name="async" type="xs:boolean" use="optional"/>
		</xs:complexType>
	</xs:element>
	<xs:element name="node">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="event" minOccurs="0" maxOccurs="unbounded"/>
				<xs:element ref="transition" minOccurs="0" maxOccurs="unbounded"/>
				<!-- node-enter|node-leave -->
			</xs:sequence>
			<xs:attribute name="name" type="xs:string" use="required"/>
			<xs:attribute name="async" type="xs:boolean" use="optional"/>
		</xs:complexType>
	</xs:element>
	<xs:element name="task-node">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="event" minOccurs="0" maxOccurs="unbounded"/>
				<xs:element ref="task" minOccurs="0" maxOccurs="unbounded"/>
				<xs:element name="formInformation" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
				<xs:element ref="transition" minOccurs="0" maxOccurs="unbounded"/>
				<!-- node-enter|node-leave -->
			</xs:sequence>
			<xs:attribute name="name" type="xs:string" use="required"/>
			<xs:attribute name="create-tasks" type="xs:boolean" use="optional"/>
			<xs:attribute name="signal" use="optional">
				<xs:simpleType>
					<xs:restriction base="xs:NMTOKEN">
						<xs:enumeration value="unsynchronized"/>
						<xs:enumeration value="never"/>
						<xs:enumeration value="first"/>
						<xs:enumeration value="first-wait"/>
						<xs:enumeration value="last"/>
						<xs:enumeration value="last-wait"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
		</xs:complexType>
	</xs:element>
	<xs:element name="decision">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="handler"/>
				<xs:element ref="transition" minOccurs="0" maxOccurs="unbounded"/>
			</xs:sequence>
			<xs:attribute name="name" type="xs:string" use="required"/>
		</xs:complexType>
	</xs:element>
	<xs:element name="fork">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="event" minOccurs="0" maxOccurs="unbounded"/>
				<xs:element ref="transition" minOccurs="0" maxOccurs="unbounded"/>
				<!-- node-enter|node-leave -->
			</xs:sequence>
			<xs:attribute name="name" type="xs:string" use="required"/>
			<xs:attribute name="async" type="xs:boolean" use="optional"/>
		</xs:complexType>
	</xs:element>
	<xs:element name="join">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="event" minOccurs="0" maxOccurs="unbounded"/>
				<xs:element ref="transition" minOccurs="0" maxOccurs="unbounded"/>
				<!-- node-enter|node-leave -->
			</xs:sequence>
			<xs:attribute name="name" type="xs:string" use="required"/>
			<xs:attribute name="async" type="xs:boolean" use="optional"/>
		</xs:complexType>
	</xs:element>
	<xs:element name="end-state">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="event" minOccurs="0" maxOccurs="unbounded"/>
				<!-- node-enter -->
			</xs:sequence>
			<xs:attribute name="name" type="xs:string" use="required"/>
		</xs:complexType>
	</xs:element>
</xs:schema>
