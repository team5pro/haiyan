/* Generated By:JJTree&JavaCC: Do not edit this line. ParserConstants.java */
package haiyan.exp;


/** 
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface ParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int NUMERIC_LITERAL = 7;
  /** RegularExpression Id. */
  int INTEGER_LITERAL = 8;
  /** RegularExpression Id. */
  int LONG_LITERAL = 9;
  /** RegularExpression Id. */
  int DECIMAL_LITERAL = 10;
  /** RegularExpression Id. */
  int HEX_LITERAL = 11;
  /** RegularExpression Id. */
  int HEX_DIGITS = 12;
  /** RegularExpression Id. */
  int OCTAL_LITERAL = 13;
  /** RegularExpression Id. */
  int FLOATING_POINT_LITERAL = 14;
  /** RegularExpression Id. */
  int FRACTION = 15;
  /** RegularExpression Id. */
  int EXPONENT = 16;
  /** RegularExpression Id. */
  int DATE_LITERAL = 17;
  /** RegularExpression Id. */
  int DATE_ONLY_LITERAL = 18;
  /** RegularExpression Id. */
  int TIME_ONLY_LITERAL = 19;
  /** RegularExpression Id. */
  int BOOLEAN_LITERAL = 20;
  /** RegularExpression Id. */
  int NULL_LITERAL = 21;
  /** RegularExpression Id. */
  int FUNSHORTCIRCUIT = 22;
  /** RegularExpression Id. */
  int FUNFIXED = 23;
  /** RegularExpression Id. */
  int IDENTIFIER = 24;
  /** RegularExpression Id. */
  int LETTER = 25;
  /** RegularExpression Id. */
  int DIGIT = 26;
  /** RegularExpression Id. */
  int STRING_LITERAL = 27;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "<token of kind 5>",
    "<token of kind 6>",
    "<NUMERIC_LITERAL>",
    "<INTEGER_LITERAL>",
    "<LONG_LITERAL>",
    "<DECIMAL_LITERAL>",
    "<HEX_LITERAL>",
    "<HEX_DIGITS>",
    "<OCTAL_LITERAL>",
    "<FLOATING_POINT_LITERAL>",
    "<FRACTION>",
    "<EXPONENT>",
    "<DATE_LITERAL>",
    "<DATE_ONLY_LITERAL>",
    "<TIME_ONLY_LITERAL>",
    "<BOOLEAN_LITERAL>",
    "\"null\"",
    "<FUNSHORTCIRCUIT>",
    "<FUNFIXED>",
    "<IDENTIFIER>",
    "<LETTER>",
    "<DIGIT>",
    "<STRING_LITERAL>",
    "\"=\"",
    "\"<\"",
    "\">\"",
    "\"<=\"",
    "\">=\"",
    "\"<>\"",
    "\"&\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"^\"",
    "\"(\"",
    "\")\"",
    "\",\"",
  };

}
